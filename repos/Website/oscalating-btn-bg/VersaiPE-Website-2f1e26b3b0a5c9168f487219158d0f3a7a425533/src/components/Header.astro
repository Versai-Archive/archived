---
export interface Props {
  logoSrc?: string;
  logoAlt?: string;
  heroSrc?: string;
  heroAlt?: string;
  aspectRatio?: string;
}
import HeaderLink from "./HeaderLink.astro";
import { Image, Picture } from "@astrojs/image/components";
import { Icon } from "astro-icon";
const { logoSrc, logoAlt, heroSrc, heroAlt, aspectRatio } = Astro.props;
const iconSizes = {
  desktop: "20px",
  mobile: "30px",
};
const hasImage = Astro.url.pathname === "/" || heroSrc;
---

<div class={!hasImage ? "header" : "header header--has-image"}>
  {
    hasImage && (
      <>
        <Picture
          class="header__image"
          src={heroSrc || import("../../public/banner-default.png")}
          aspectRatio={aspectRatio}
          widths={[200, 400, 800]}
          iconSizess="(max-width: 800px) 100vw, 800px"
          alt={heroAlt || "Versai Banner"}
        />
        <Image
          class="header__logo"
          src={logoSrc || import("../../public/logo.png")}
          alt={logoAlt || "Versai Logo"}
        />
      </>
    )
  }
  {!hasImage && <div class="header__backdrop" />}
  <header class="header__content">
    <div class="nav-desktop">
      <nav class="nav-desktop__links">
        {
          !hasImage && (
            <HeaderLink href="/">
              <Image
                class="header__logo-small"
                src={logoSrc || import("../../public/logo.png")}
                alt={logoAlt || "Versai Logo"}
              />
            </HeaderLink>
          )
        }
        <HeaderLink href="/">Home</HeaderLink>
        <HeaderLink href="/rules">Rules</HeaderLink>
        <HeaderLink href="/updates">Updates</HeaderLink>
        <HeaderLink href="/about">About</HeaderLink>
      </nav>
      <nav class="nav-desktop__icons">
        <HeaderLink href="https://discord.gg/versai" target="_blank">
          <Icon
            width={iconSizes.desktop}
            height={iconSizes.desktop}
            name="fa-brands:discord"
          />
        </HeaderLink>
        <HeaderLink href="https://twitter.com/VersaiPE" target="_blank">
          <Icon
            width={iconSizes.desktop}
            height={iconSizes.desktop}
            name="fa-brands:twitter"
          />
        </HeaderLink>
        <HeaderLink href="https://instagram.com/versainetwork" target="_blank">
          <Icon
            width={iconSizes.desktop}
            height={iconSizes.desktop}
            name="fa-brands:instagram"
          />
        </HeaderLink>
      </nav>
    </div>
    <div class="nav-mobile">
      {
        !hasImage && (
          <Image
            class="nav-mobile__logo-small"
            src={logoSrc || import("../../public/logo.png")}
            alt={logoAlt || "Versai Logo"}
          />
        )
      }
      <button class="hamburger hamburger--emphatic" type="button">
        <span class="hamburger-box">
          <span class="hamburger-inner"></span>
        </span>
      </button>
      <HeaderLink href="/">Home</HeaderLink>
      <HeaderLink href="/rules">Rules</HeaderLink>
      <HeaderLink href="/updates">Updates</HeaderLink>
      <HeaderLink href="/about">About</HeaderLink>

      <div class="nav-mobile__socials">
        <HeaderLink href="https://discord.gg/versai" target="_blank">
          <Icon
            width={iconSizes.mobile}
            height={iconSizes.mobile}
            name="fa-brands:discord"
          />
        </HeaderLink>
        <HeaderLink href="https://twitter.com/VersaiPE" target="_blank">
          <Icon
            width={iconSizes.mobile}
            height={iconSizes.mobile}
            name="fa-brands:twitter"
          />
        </HeaderLink>
        <HeaderLink href="https://instagram.com/versainetwork" target="_blank">
          <Icon
            width={iconSizes.mobile}
            height={iconSizes.mobile}
            name="fa-brands:instagram"
          />
        </HeaderLink>
      </div>
    </div>
  </header>
</div>
<style lang="scss" is:global>
  @use "../styles/variables" as *;
  .header {
    width: 100vw;
    position: relative;
    &--has-image {
      min-height: 300px;
      &::after {
        position: absolute;
        content: "";
        height: 30%;
        width: 100%;
        z-index: 1;
        background: linear-gradient(
          180deg,
          hsla(0 0% 0% / 1),
          hsla(0 0% 0% / 0)
        );
      }
    }
    z-index: 50;
    &__content {
      z-index: 10;
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      margin: auto;
      width: 100%;
      max-width: 1200px;
      padding: 2.5rem;
      padding-top: 1.85rem;
      display: flex;
      justify-content: space-between;
    }
    &__image {
      position: absolute;
      object-fit: cover;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      width: 100%;
      height: 100%;
    }
    &__logo {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      @include screen($md) {
        width: 400px;
      }
    }
    &__backdrop {
      height: 100px;
      background-color: var(--color-background-secondary);
    }
    &__logo-small {
      width: 150px;
    }
  }
  .nav-desktop {
    display: none;
    @include screen($md) {
      display: contents;
    }
    &__links,
    &__icons {
      display: flex;
      align-items: center;
      gap: 1rem;
    }
  }
  .nav-mobile {
    &__logo-small {
      width: 150px;
      position: absolute;
    }
    @include screen($md) {
      display: none;
    }
    .header-link {
      display: none;
      text-transform: uppercase;
    }
  }

  .header--mobile-open {
    @include screen($md, true) {
      .header__content {
        height: 100vh; // Falls back to 100vh if dvh units are not supported
        height: 100dvh; // This fixes the issue on mobile safari
        width: 100vw;
        z-index: 9;
        background: var(--color-background-secondary);
      }
    }
    .nav-mobile {
      &__logo-small {
        display: none;
      }
      &__socials {
        position: absolute;
        left: 0;
        bottom: 3vh;
        width: 100%;
        display: flex;
        justify-content: space-evenly;
      }
      .header-link {
        display: block;
        font-size: 2rem;
        text-align: left;
        padding: 1rem 0;
        &::after {
        }
      }
    }
  }

  body:has(.header--mobile-open) {
    overflow: hidden;
  }

  .hamburger {
    margin-left: auto;
    display: block;
    position: absolute;
    right: 15px;
  }
</style>

<script>
  // Hamburger

  const header = document.querySelector(".header") as HTMLDivElement;
  const hamburger = document.querySelector(".hamburger") as HTMLButtonElement;
  hamburger.addEventListener("click", function () {
    hamburger.classList.toggle("is-active");
    header.classList.toggle("header--mobile-open");
  });

  // Letter animation

  const letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
  document.querySelectorAll(".nav-mobile .header-link").forEach((element) => {
    const initialText = (element as HTMLAnchorElement).innerText.trim();
    console.log(initialText);
    element.addEventListener("mouseover", (event) => {
      const target = event.target as HTMLAnchorElement;
      let iterations = 0;
      const interval = setInterval(() => {
        target.innerText = target.innerText
          .split("")
          // Pick a random letter from the letters array
          .map((_, index) => {
            if (index < iterations) {
              return initialText[index];
            }
            return letters[Math.floor(Math.random() * letters.length)];
          })
          .join("");
        // Stop after 10 iterations
        if (iterations > 9) {
          clearInterval(interval);
          return;
        }
        iterations++;
      }, 50);
    });
  });
</script>
