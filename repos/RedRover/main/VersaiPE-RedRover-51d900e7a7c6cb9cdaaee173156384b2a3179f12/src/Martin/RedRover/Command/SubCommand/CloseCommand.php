<?php


namespace Martin\RedRover\Command\SubCommand;


use Martin\GameAPI\Command\BaseGameSubCommand;
use Martin\GameAPI\GamePlugin;
use Martin\RedRover\Main;
use pocketmine\command\CommandSender;
use pocketmine\Player;

class CloseCommand extends BaseGameSubCommand
{
    public function onRun(CommandSender $sender, array $args): void
    {
        if (!($sender instanceof Player)) {
            $sender->sendMessage($this->getPlugin()->getMessage("commands.error.player-only"));
            return;
        }

        $game = $this->getPlugin()->getGameByPlayer($sender);
        if (is_null($game)) {
            $sender->sendMessage($this->getPlugin()->getMessage("commands.error.in-game"));
            return;
        }

        if ($game->getCreator() !== $sender) {
            $sender->sendMessage($this->getPlugin()->getMessage("commands.close.creator-only"));
            return;
        }

        foreach ($game->getPlayers(null, true) as $player) {
            if (($plugin = $this->getPlugin()) instanceof Main) {
                if ($plugin->getEndType() === Main::END_TYPE_COMMAND) {
                    $player->chat("/" . $plugin->getEndCommand());
                } else if ($plugin->getServer()->getDefaultLevel()) {
                    $player->teleport($plugin->getServer()->getDefaultLevel()->getSpawnLocation());
                } else {
                    $player->chat("/" . $plugin->getEndCommand());
                }
            }
        }

        $game->close();
    }

    /**
     * @return Main
     */
    public function getPlugin(): GamePlugin
    {
        return parent::getPlugin(); // TODO: Change the autogenerated stub
    }

    protected function prepare(): void
    {
        $this->setPermission("redrover.games");
    }
}